{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nexport default {\n  name: 'OrdaOrders',\n  data() {\n    return {\n      orders: []\n    };\n  },\n  mounted() {\n    this.fetchOrders();\n  },\n  methods: {\n    fetchOrders() {\n      console.log('Fetching orders from:', process.env.VUE_APP_ORDERS_API);\n      const url = new URL(process.env.VUE_APP_ORDERS_API);\n      // Force HTTPS by replacing the protocol if necessary\n      // url.protocol = 'https:';\n\n      fetch(url.toString()).then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        return response.json();\n      }).then(data => {\n        this.orders = data;\n      }).catch(error => console.error('Error fetching orders:', error));\n    }\n  }\n};","map":{"version":3,"names":["name","data","orders","mounted","fetchOrders","methods","console","log","process","env","VUE_APP_ORDERS_API","url","URL","fetch","toString","then","response","ok","Error","status","json","catch","error"],"sources":["/Users/pshongwe/ALX/Orda_v1.0/frontend/src/components/OrdaOrders.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <table>\n      <thead>\n        <tr>\n          <th>Order ID</th>\n          <th>Customer ID</th>\n          <th>Items</th>\n          <th>Total</th>\n          <th>Date</th>\n          <th>Status</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"order in orders\" :key=\"order.order_id\">\n          <td>{{ order.order_id }}</td>\n          <td>{{ order.customer_id }}</td>\n          <td>\n            <ul>\n              <li v-for=\"item in order.items\" :key=\"item.item_id\">\n                {{ item.quantity }} x {{ item.name }} at ${{ item.price }}\n              </li>\n            </ul>\n          </td>\n          <td>${{ order.total }}</td>\n          <td>{{ order.date }}</td>\n          <td>{{ order.status }}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'OrdaOrders',\n  data() {\n    return {\n      orders: []\n    };\n  },\n  mounted() {\n    this.fetchOrders();\n  },\n  methods: {\n    fetchOrders() {\n      console.log('Fetching orders from:', process.env.VUE_APP_ORDERS_API); \n      \n      const url = new URL(process.env.VUE_APP_ORDERS_API);\n      // Force HTTPS by replacing the protocol if necessary\n      // url.protocol = 'https:';\n\n      fetch(url.toString())\n        .then(response => {\n          if (!response.ok) {\n            throw new Error(`HTTP error! Status: ${response.status}`);\n          }\n          return response.json();\n        })\n        .then(data => {\n          this.orders = data;\n        })\n        .catch(error => console.error('Error fetching orders:', error));\n    }\n  }\n}\n</script>\n\n<style scoped>\ntable {\n  margin-left: auto;\n  margin-right: auto;\n  width: 80%;\n  border-collapse: collapse;\n}\n\nthead {\n  background-color: #f4f4f4;\n}\n\nth, td {\n  padding: 8px;\n  text-align: left;\n  border-bottom: 1px solid #ddd;\n}\n\ntr:hover {\n  background-color: #f5f5f5;\n}\n\nth {\n  height: 50px;\n}\n</style>"],"mappings":";;;AAkCA,eAAe;EACbA,IAAI,EAAE,YAAY;EAClBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE;IACV,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,WAAW,CAAC,CAAC;EACpB,CAAC;EACDC,OAAO,EAAE;IACPD,WAAWA,CAAA,EAAG;MACZE,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEC,OAAO,CAACC,GAAG,CAACC,kBAAkB,CAAC;MAEpE,MAAMC,GAAE,GAAI,IAAIC,GAAG,CAACJ,OAAO,CAACC,GAAG,CAACC,kBAAkB,CAAC;MACnD;MACA;;MAEAG,KAAK,CAACF,GAAG,CAACG,QAAQ,CAAC,CAAC,EACjBC,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBF,QAAQ,CAACG,MAAO,EAAC,CAAC;QAC3D;QACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;MACxB,CAAC,EACAL,IAAI,CAACd,IAAG,IAAK;QACZ,IAAI,CAACC,MAAK,GAAID,IAAI;MACpB,CAAC,EACAoB,KAAK,CAACC,KAAI,IAAKhB,OAAO,CAACgB,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC,CAAC;IACnE;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}