name: Continuous Integration and Deployment with Podman

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Podman
      run: |
        . /etc/os-release
        echo "deb http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_${VERSION_ID}/ /" | sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list
        curl -L "https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_${VERSION_ID}/Release.key" | sudo apt-key add -
        sudo apt-get update
        sudo apt-get -y install podman

    - name: Install Podman-Compose
      run: |
        sudo pip install podman-compose

    - name: Setup CNI Plugins
      run: |
        sudo mkdir -p /etc/cni/net.d/
        echo -e '{
          "cniVersion": "0.4.0",
          "name": "orda_v10_default",
          "plugins": [
            {
              "type": "bridge",
              "bridge": "podman_cni_bridge",
              "isGateway": true,
              "ipMasq": true,
              "ipam": {
                "type": "host-local",
                "subnet": "10.88.0.0/16",
                "routes": [{"dst": "0.0.0.0/0"}]
              }
            },
            {
              "type": "portmap",
              "capabilities": {
                "portMappings": true
              }
            }
          ]
        }' | sudo tee /etc/cni/net.d/87-podman-bridge.conflist

    - name: Debug Podman Network
      run: podman --log-level=debug network inspect orda_v10_default
  
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Create and activate virtual environment
      run: |
        python3 -m venv venv --without-pip
        source venv/bin/activate

    - name: Build and run with Podman Compose
      run: |
        podman-compose build
        podman-compose up -d
        echo ${{ secrets.ORDA_TOKEN }} | podman login docker.io --username ${{ secrets.DOCKER_USERNAME }} --password-stdin
        podman build --arch x86 -t localhost/orda_v10_backend:1.0 ./backend
        podman tag localhost/orda_v10_backend:1.0 ${{ secrets.DOCKER_USERNAME }}/orda_v10_backend:1.0
        podman push ${{ secrets.DOCKER_USERNAME }}/orda_v10_backend:1.0
        
    - name: Run tests (optional)
      run: |
        echo "Run tests here"

    - name: Cleanup
      if: always()
      run: podman-compose down

    - name: Deploy (if needed)
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        # Add deployment commands here if necessary
        echo "Deployment steps here"

