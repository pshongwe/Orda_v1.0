name: Continuous Integration and Deployment with Podman

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Podman
      run: |
        . /etc/os-release
        sudo sh -c "echo 'deb http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/$ID_$VERSION_ID/ /' > /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list"
        sudo wget -nv https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable/$ID_$VERSION_ID/Release.key -O Release.key
        sudo apt-key add - < Release.key
        sudo apt-get update -qq
        sudo apt-get -qq -y install podman podman-docker

    - name: Set up Python environment
      run: |
        python3 -m venv venv
        source venv/bin/activate
        pip install -r backend/requirements.txt

    - name: Build and run with Podman Compose
      run: |
        podman-compose build
        podman-compose up -d

    - name: Run tests (optional)
      run: |
        # Add commands to execute tests, for example:
        echo "Run tests here"
        # For example, in Flask:
        # python -m pytest backend/tests

#    - name: Cleanup
#      if: always()
#      run: podman-compose down

    - name: Deploy (if needed)
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        # Add deployment commands here if necessary
        echo "Deployment steps here"
